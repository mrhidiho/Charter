apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: { app: vllm }
  template:
    metadata:
      labels: { app: vllm }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
      containers:
      - name: vllm
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - "--host=0.0.0.0"
          - "--port=8000"
          - "--served-model-name=llm"
          - "--model={{ .Values.model.name }}"
          - "--dtype={{ .Values.model.dtype }}"
          - "--max-model-len={{ .Values.model.max_model_len }}"
          {{- range .Values.extraArgs }}
          - "{{ . }}"
          {{- end }}
        ports:
          - containerPort: 8000
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: modelvol
          mountPath: /models
          readOnly: true
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: modelvol
        {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
